{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/COMPUTACION/bicc/experiment_webpage/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport './home.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  //TODO:  add Texto experimento\n  //TODO: agregar una fase de prueba \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetCellPhoneFromUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Header\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Experimento \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Header;\nfunction SubHeader() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Explicacion del exp y condiciones para participar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c3 = SubHeader;\nfunction GetCellPhoneFromUser() {\n  _s();\n  //TODO: parsear tel para que sea valido\n  // si cambia el userId sacar el registeredID \n  // hacer que no puedan llenar la base con users \n  const [userId, setUserId] = useState('');\n  const navigate = useNavigate();\n  const handleInputChange = event => {\n    setUserId(event.target.value);\n  };\n  const handleCheckUser = async () => {\n    try {\n      const response = await axios.get(`/api/checkUser/${userId}`);\n      const {\n        userExists\n      } = response.data;\n      console.log(userExists);\n      return userExists !== null;\n    } catch (error) {\n      console.error('Error checking user:', error);\n      return false;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userExists = await handleCheckUser();\n    if (userExists) {\n      console.log('User already exists');\n      alert('Usuario ya registrado!');\n    } else {\n      console.log('Add new user: User does not exist');\n      try {\n        const response = await axios.post('/api/addUser', {\n          userId\n        });\n        navigate(`/experiment/${userId}`);\n      } catch (error) {\n        console.error('Error submitting data:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ingresa tu telefono antes de comenzar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId,\n        onChange: handleInputChange,\n        placeholder: \"Ingresa tu telefono\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ingresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(GetCellPhoneFromUser, \"dSs/X9PJA4CcK1IZu3EWmH0hZrQ=\", false, function () {\n  return [useNavigate];\n});\n_c4 = GetCellPhoneFromUser;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"SubHeader\");\n$RefreshReg$(_c4, \"GetCellPhoneFromUser\");","map":{"version":3,"names":["useNavigate","axios","React","useState","jsxDEV","_jsxDEV","Home","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","SubHeader","GetCellPhoneFromUser","_c","className","_c2","_c3","_s","userId","setUserId","navigate","handleInputChange","event","target","value","handleCheckUser","response","get","userExists","data","console","log","error","handleSubmit","e","preventDefault","alert","post","onSubmit","type","onChange","placeholder","_c4","$RefreshReg$"],"sources":["/home/paula/Documents/COMPUTACION/bicc/experiment_webpage/src/components/Home.js"],"sourcesContent":["import './home.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport React,  { useState } from 'react';\n\nexport default function Home() {\n\n  //TODO:  add Texto experimento\n  //TODO: agregar una fase de prueba \n  return (\n    <div>\n      <Header/>\n      <SubHeader/>\n      <GetCellPhoneFromUser/>\n    </div>\n  );\n}\n\nfunction Header(){\n  return (\n    <div className=\"Header\">\n      <h1> Experimento </h1>\n    </div>\n\n  );\n}\n\nfunction SubHeader(){\n  return (\n    <div >\n      Explicacion del exp y condiciones para participar  \n    </div>\n\n  );\n}\n\nfunction GetCellPhoneFromUser() {\n\n  //TODO: parsear tel para que sea valido\n  // si cambia el userId sacar el registeredID \n  // hacer que no puedan llenar la base con users \n  const [userId, setUserId] = useState('');\n  const navigate = useNavigate();\n\n  const handleInputChange = (event) => {\n    setUserId(event.target.value);\n  };\n\n  \n  const handleCheckUser = async () => {\n    try {\n      const response = await axios.get(`/api/checkUser/${userId}`);\n      const { userExists } = response.data;\n      console.log(userExists);\n      return (userExists !== null);\n     \n    } catch (error) {\n      console.error('Error checking user:', error);\n      return false;\n    }\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const userExists = await handleCheckUser();\n    \n    if (userExists) {\n      console.log('User already exists');\n      alert('Usuario ya registrado!')\n    } else {\n      console.log('Add new user: User does not exist');\n      try {\n        const response = await axios.post('/api/addUser', {\n           userId\n         });\n         navigate(`/experiment/${userId}`)\n       } catch (error) {\n         console.error('Error submitting data:', error);\n       }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Ingresa tu telefono antes de comenzar</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={userId}\n          onChange={handleInputChange}\n          placeholder=\"Ingresa tu telefono\"\n        />\n        <button type=\"submit\">Ingresar</button>\n      </form>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}